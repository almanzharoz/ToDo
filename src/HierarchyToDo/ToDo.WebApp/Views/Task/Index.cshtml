@using SharpFuncExt
@model ValueTuple<ToDo.Dal.Models.Project, ToDo.Dal.Projections.Task, System.Collections.Generic.IEnumerable<ToDo.WebApp.Model.TaskViewModel>>
@{
	ViewBag.Title = Model.Item1.Name + (Model.Item2 == null ? ": Задачи" : $": Подзадачи \"{Model.Item2.Name}\"");
}
<table class="table table-hover">
	<thead>
	<tr>
		<th>User</th>
		<th>Date</th>
		<th>Name</th>
		<th>Assigned</th>
		<th>Deadline</th>
		<th>EstimatedTime</th>
		<th>Children</th>
		<th></th>
	</tr>
	</thead>
	<tbody>
	@foreach (var t in Model.Item3)
	{
		<tr>
			<td>@t.User.Nick</td>
			<td>@t.Created.ToString("g")</td>
			<td>@t.Name</td>
			<td>@t.Assign.IfNotNullOrDefault(x => x.Nick)</td>
			<td>@t.Deadline</td>
			<td>@t.EstimatedTime</td>
			<td>
				@if (t.ChildrenCount > 0)
				{
					<a href="@Url.Action("Index", new {Model.Item1.Id, parentTaskId = t.Id })" class="modal-link">@t.ChildrenCount</a>
				}
			</td>
			<td><a href="@Url.Action("AddTask", new {Model.Item1.Id, parentTaskId=t.Id})" class="modal-link">добавить</a></td>
		</tr>
	}
	</tbody>
</table>
@section Header{
	<div>
		<span>Задачи: </span>
		<a href="@Url.Action("Index", new {id = Model.Item1.Id})" class="modal-link">@Model.Item1.Name</a>
		@if (Model.Item2 != null)
		{
			ToDo.Dal.Projections.Task task = Model.Item2;
			var tasks = new List<ToDo.Dal.Projections.Task>();
			tasks.Add(task);
			while ((task = task.ParentTask) != null)
			{
				tasks.Add(task);
			}
			tasks.Reverse();
			foreach (var t in tasks)
			{
				<span>&nbsp;/&nbsp;</span>
				<a href="@Url.Action("Index", new {id = Model.Item1.Id, parentTaskId = t.Id})" class="modal-link">@t.Name</a>
			}
		}
	</div>
}